%TL_HALFBAND Returns a multirate filter object.

%
% M-File generated by MATLAB(R) 7.10 and the Signal Processing Toolbox 6.13.
%
% Generated on: 19-Jun-2012 09:55:49
%

% Equiripple Halfband lowpass filter designed using the FIRHALFBAND
% function.
close all;

% All frequency values are in Hz.
Fs = 96;  % Sampling Frequency

Fpass = 20;               % Passband Frequency
Dpass = 0.0014391146896;  % Passband Ripple

% Calculate the coefficients using the FIRPM function.
b  = firhalfband('minorder', Fpass/(Fs/2), Dpass);
Hd = dfilt.dffir(b);
delayd = grpdelay(Hd, 1);
intf = 2;                     % Interpolation Factor
num  = get(Hd, 'Numerator');  % Get the numerator from the current filter.

Hm  = mfilt.firinterp(intf, num*2);
delaym = grpdelay(Hm, 1);

fs = 22.05e3;                % Original sample freq: 22.05 kHz.
n = 0:5119;                   % 5120 samples, 0.232s long signal.
x  = sin(2*pi*1e3/fs*n);    % Original signal, sinusoid at 1 kHz.
y = filter(Hm,x);           % 10240 samples, still 0.232s.
figure(1);
stem(n(1:22)/fs,x(1:22),'filled') % Plot original sampled at 
                                  % 22.05 kHz.
hold on;

% Plot interpolated signal (44.1 kHz) in red
stem(n(1:44)/(fs*intf),y(delaym+(1:44)),'r')
xlabel('Time (sec)');ylabel('Signal Value')
legend('Original Signal','Interpolated using multirate');

x2 = upsample(x, 2);
y2 = filter(Hd, x2);
figure(2);
stem(n(1:22)/fs,x(1:22),'filled') % Plot original sampled at 
hold on;
% Plot interpolated signal (44.1 kHz) in red
stem(n(1:44)/(fs*intf),y2(delayd+(1:44)),'r')
xlabel('Time (sec)');ylabel('Signal Value')
legend('Original Signal','Interpolated using FIR');
